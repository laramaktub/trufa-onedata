tosca_definitions_version: tosca_simple_yaml_1_0

imports:
  - indigo_custom_types: https://raw.githubusercontent.com/indigo-dc/tosca-types/master/custom_types.yaml

description: TOSCA examples for specifying a Chronos Job that runs an application using Onedata storage.

topology_template:
  inputs:

    input_onedata_token:
      type: string
      description: User token required to mount the user's INPUT Onedata space
      required: yes
    
    output_onedata_token:
      type: string
      description: User token required to mount the user's OUTPUT Onedata space. It can be the same as the input token
      required: yes
    
    input_onedata_providers:
      type: string
      description: csv list of favorite Onedata providers to be used to mount the Input Onedata space. If not provided, data locality algo will be applied.
      default: ''
      required: no
    
    output_onedata_providers:
      type: string
      description: csv list of favorite Onedata providers to be used to mount the Output Onedata space. If not provided, the same provider(s) used to mount the input space will be used.
      default: ''
      required: no
    
    
    input_config_file:
      type: string
      description: Input file to edit
      required: yes

    output_data:
      type: string
      description: Path to the output folder
      required: yes

    d3d_param:
      type: string
      description: Param of Delft3d to seep
      default: ''
      required: yes
    
    d3d_value:
      type: string
      description: Value of Delft3d Param
      default: ''
      required: yes


    mycommand:
      type: string
      description: Value of the command
      default: ''
      required: yes

    
    cpus:
      type: float
      description: Amount of CPUs for this job
      required: yes
    
    mem:
      type: scalar-unit.size
      description: Amount of Memory for this job
      required: yes 
  

  node_templates:
 
   
    chronos_job1:
      type: tosca.nodes.indigo.Container.Application.Docker.Chronos
      properties:
        description: 'Execute Application'
        command: {get_input: mycommand} 
        uris: []
        retries: 3
        environment_variables:
          D3D_VALUE: { get_input: d3d_value }
          INPUT_ONEDATA_TOKEN: { get_input: input_onedata_token }
          OUTPUT_ONEDATA_TOKEN: { get_input: output_onedata_token }
          D3D_PARAM: { get_input: d3d_param }
          INPUT_CONFIG_FILE: { get_input: input_config_file }
          D3D_BIN: 'bin_path'
          INPUT_ONEDATA_PROVIDERS: { get_input: input_onedata_providers }
          OUTPUT_DATA: {get_input: output_data}
          OUTPUT_ONEDATA_PROVIDERS: { get_input: output_onedata_providers }
      artifacts:
        image:
          file: 'ferag/test-trufa-cloud' 
          type: tosca.artifacts.Deployment.Image.Container.Docker
      requirements:
        - host: docker_runtime
   
   
    docker_runtime:
      type: tosca.nodes.indigo.Container.Runtime.Docker
      capabilities:
        host:
          properties:
            num_cpus: { get_input: cpus }
            mem_size: { get_input: mem }
